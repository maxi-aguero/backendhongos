spring.application.name=com.backend_project
server.port = 8064

#Conexion a local host 
#servidor: localhost
#nombre de la base de datos: sql5555
#usuario: root
#pass:
#MySQL URL: mysql://localhost/sql5555
#observacion: tiene que haber una base de datos llamada sql5555 si no habria error.

spring.datasource.url=jdbc:mysql://localhost/sql5555
spring.datasource.username=root
spring.datasource.password=

#Para una conexion remota necesitamos un servidor remoto
#Ejemplo de servidor remoto
#servidor: tlo.h.filess.io
#nombre de la base de datos: sql123_greatlytoo
#usuario:sql123_greatlytoo
#pass:632f0d7d35a36bc316f2fef17841e412ade58326
#MySQl URL: mysql://sql123_greatlytoo:632f0d7d35a36bc316f2fef17841e412ade58326@tlo.h.filess.io:3307/sql123_greatlytoo

#spring.datasource.url=jdbc:mysql://sql123_greatlytoo:632f0d7d35a36bc316f2fef17841e412ade58326@tlo.h.filess.io:3307/sql123_greatlytoo
#spring.datasource.username=sql123_greatlytoo
#spring.datasource.password=632f0d7d35a36bc316f2fef17841e412ade58326

#observacion: solo tiene 5 conexiones el servidor remoto si no hay que pagar para mas conexiones, por eso se decidio realizar el proyecto el localhost


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

spring.thymeleaf.cache=false

